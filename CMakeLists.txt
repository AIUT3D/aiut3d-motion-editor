cmake_minimum_required(VERSION 2.8.12)
project(MotionEditor CXX C)

set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/)

find_package(Threads REQUIRED)
find_package(Boost COMPONENTS system REQUIRED)
find_package(Rcssnet3d REQUIRED)



#AI lab 95-6-11 start
set(CMAKE_PREFIX_PATH $ENV{HOME}/Qt5.4.1/5.4/gcc_64)		#to tell cmake where to find Qt5Widgets


find_package (Qt5Widgets REQUIRED)				#
set (MyProjectLib_src ${PROJECT_SOURCE_DIR}/mainwindow.cpp      #
                      ${PROJECT_SOURCE_DIR}/creditwindow.cpp    #
                      ${PROJECT_SOURCE_DIR}/sendertoserver.cpp) #this line added to get rid of "undefined reference to vtable"
set (MyProjectLib_hdr ${PROJECT_SOURCE_DIR}/mainwindow.h        #
                      ${PROJECT_SOURCE_DIR}/creditwindow.h      #
                      ${PROJECT_SOURCE_DIR}/sendertoserver.h)	#this line added to get rid of "undefined reference to vtable"
set (MyProjectLib_ui  ${PROJECT_SOURCE_DIR}/creditwindow.ui     #
                      ${PROJECT_SOURCE_DIR}/mainwindow.ui)	#
set (MyProjectBin_src ${PROJECT_SOURCE_DIR}/main.cpp)		#

qt5_wrap_cpp(MyProjectLib_hdr_moc ${MyProjectLib_hdr})		#
qt5_wrap_ui (MyProjectLib_ui_moc  ${MyProjectLib_ui})		#
#AI lab 95-6-11 end

if(NOT CMAKE_BUILD_TYPE)
  message(STATUS "No build type selected, default to Release")
  set (CMAKE_BUILD_TYPE Release)
endif(NOT CMAKE_BUILD_TYPE)

if(NOT CMAKE_CXX_FLAGS)
  set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wno-unused")
endif(NOT CMAKE_CXX_FLAGS)

set(CORE_PATH utwalk)


include_directories(
${CORE_PATH}
${RCSSNET3D_INCLUDE_DIR}
)
#AI lab 95-6-11 start
include_directories (${PROJECT_SOURCE_DIR})			#
include_directories (${PROJECT_BINARY_DIR})			#

add_library (MyProjectLib SHARED 				#
    ${MyProjectLib_src}						#
    ${MyProjectLib_hdr_moc}					#
    ${MyProjectLib_ui_moc})					#
#AI lab 95-6-11 end

set(CORE_FILES
  ${CORE_PATH}/MotionCore.cpp
  ${CORE_PATH}/Module.cpp  
  ${CORE_PATH}/common/NMatrix.cpp 
  ${CORE_PATH}/math/MVTools.cpp 
  ${CORE_PATH}/math/RotationMatrix.cpp 
  ${CORE_PATH}/memory/Lock.cpp 
  ${CORE_PATH}/memory/Logger.cpp   
  ${CORE_PATH}/memory/Memory.cpp  
  ${CORE_PATH}/memory/MemoryBlock.cpp  
  ${CORE_PATH}/memory/PrivateMemory.cpp  
  ${CORE_PATH}/memory/SharedMemory.cpp 
  ${CORE_PATH}/motion/MotionModule.cpp
  ${CORE_PATH}/motion/UTWalkEngine.cpp 
  ${CORE_PATH}/sensor/SensorModule.cpp  
  ${CORE_PATH}/sensor/InertialFilter.cpp 
  ${CORE_PATH}/kinematics/InverseKinematics.cpp 
  ${CORE_PATH}/kinematics/ForwardKinematics.cpp  
  ${CORE_PATH}/kinematics/KinematicsModule.cpp  
  ${CORE_PATH}/math/Geometry.cpp  
  ${CORE_PATH}/common/PIDController.cpp 
  ${CORE_PATH}/motion/WalkEngineParameters.cpp   
)

set(SRCS
  behaviors/behavior.cc
  behaviors/naobehavior.cc
  behaviors/checkfall.cc 
  behaviors/kicking.cc 
  behaviors/strategy.cc  
  servercomm/primitives.cc
  parser/parser.cc 
  math/hctmatrix.cc
  math/vecposition.cc
  math/Geometry.cc
  worldmodel/worldmodel.cc
  bodymodel/bodymodel.cc
  particlefilter/MyRandom.cc                                #AI lab 95-4-10 hoseini
  particlefilter/PFLocalization.cc
  particlefilter/Particle.cc
  skills/skill.cc 
  skills/curve3d.cc
  ikfast/ikfast.cpp
  headers/headers.cc
  audio/audio.cc 
  rvdraw/rvdraw.cc 
  ${CORE_FILES}
  kalman/BallKF.cpp
  kalman/PlayerKF.cpp 
  kalman/OrigKalmanFilter.cpp
  optimization/optimizationbehaviors.cc  
  #sendertoserver.cpp                                             #AI lab 95-6-11 this file is used to communicate with Simspark server
)

target_link_libraries (MyProjectLib Qt5::Widgets)		#

add_executable(motionEditor ${MyProjectBin_src} ${SRCS} resources.qrc)  # 95-09-26 Link to how to add QT resource files to CMake projects:
                                                                        # http://stackoverflow.com/questions/29468413/qt-resources-files-with-cmake-and-autorcc/29469429

target_link_libraries (motionEditor MyProjectLib)
target_link_libraries(motionEditor
${RCSSNET3D_LIBRARY}
${Boost_SYSTEM_LIBRARY}
dl
${CMAKE_THREAD_LIBS_INIT}
rt 
)


